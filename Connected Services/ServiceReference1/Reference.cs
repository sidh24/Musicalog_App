//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Musicalog_App.ServiceReference1
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Albumdetail", Namespace = "http://schemas.datacontract.org/2004/07/Musiclog_App_Service")]
    [System.SerializableAttribute()]
    public partial class Albumdetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlbumIdField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlbumNameField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StockField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlbumId
        {
            get
            {
                return this.AlbumIdField;
            }
            set
            {
                if ((this.AlbumIdField.Equals(value) != true))
                {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlbumName
        {
            get
            {
                return this.AlbumNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AlbumNameField, value) != true))
                {
                    this.AlbumNameField = value;
                    this.RaisePropertyChanged("AlbumName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Artist
        {
            get
            {
                return this.ArtistField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ArtistField, value) != true))
                {
                    this.ArtistField = value;
                    this.RaisePropertyChanged("Artist");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Stock
        {
            get
            {
                return this.StockField;
            }
            set
            {
                if ((this.StockField.Equals(value) != true))
                {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.TypeField, value) != true))
                {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "ServiceReference1.IAlbumService")]
    public interface IAlbumService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAlbumService/GetAlbumdetails", ReplyAction = "http://tempuri.org/IAlbumService/GetAlbumdetailsResponse")]
        Musicalog_App.ServiceReference1.Albumdetail[] GetAlbumdetails();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAlbumService/GetAlbumdetails", ReplyAction = "http://tempuri.org/IAlbumService/GetAlbumdetailsResponse")]
        System.Threading.Tasks.Task<Musicalog_App.ServiceReference1.Albumdetail[]> GetAlbumdetailsAsync();
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlbumServiceChannel : Musicalog_App.ServiceReference1.IAlbumService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceReference1 : System.ServiceModel.ClientBase<Musicalog_App.ServiceReference1.IAlbumService>, Musicalog_App.ServiceReference1.IAlbumService
    {
        public ServiceReference1(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServiceReference1(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public ServiceReference1(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public Musicalog_App.ServiceReference1.Albumdetail[] GetAlbumdetails()
        {
            return base.Channel.GetAlbumdetails();
        }

        public System.Threading.Tasks.Task<Musicalog_App.ServiceReference1.Albumdetail[]> GetAlbumdetailsAsync()
        {
            return base.Channel.GetAlbumdetailsAsync();
        }
    }
}
